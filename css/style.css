/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/
nav a:hover, nav a:focus {
     text-decoration: underline;
 }



/* Step 2a: Write selector/rule property to position the default position for the skip class element*/

div.skip {
     position: absolute;
     top: -40px;
     left: 0;
 }


/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/

 div.skip:focus-within {
     top: 20px;
 }
/* Step 3: Write selector/rule property to style all elements when in focus*/
*:focus {
     border: 2px black;
   }


/* Step 4: Write selector/rule property to style the container */
.container {
     display: grid;
     grid-template-columns: 1fr 5fr 1fr;
     grid-row-gap: 15px;
   }

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */
.container > :first-child {
     grid-column: 1 / -1;
     background-image: url("../images/header.jpg"); 
     background-attachment: fixed; /* Parallax effect */     
     background-position: center;  /* Parallax effect */
    background-repeat: no-repeat; /* Parallax effect */
    background-size: cover;       /* Parallax effect */
    height: 400px;                /* Parallax effect */

}


/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */

      /*This will be a lot of rules.... but be strategic and combine seletors*/
      /* The classes  .about, .method, .clients, and .contact:
-Begin in 2nd column and span one column
-Begin on the 2nd, 3rd, 4th and 5th rows respectively.  */
.about, .method, .clients, .contact{
     grid-column: 2 / span 1;
   }
.about {
     grid-row: 2/3;
}
.method {
     grid-row: 3/4;
}
.clients {
     grid-row: 4/5;
}
.contact {
     grid-row: 5/6;
}
/* The .about-image, .method-image, .clients-image,   and .contact-image elements:
-Cover all of the columns.
-Have a maximum height of 600px
-Hide any content that goes outside their grid cell. 
-Begin on the 2nd, 3rd, 4th and 5th row respectively. */
.about-image, .method-image, .clients-image, .contact-image {
     grid-column: 1/-1;
     max-height: 600px;
     overflow:hidden
}
.about-image {
     grid-row: 2/3;
}
.method-image {
     grid-row: 3/4;
}
.clients-image {
     grid-row: 4/5;
}
.contact-image {
     grid-row: 5/6;
}


 /* Step 8: Write the selector/rule property to style the .text-block class. */
.text-block {
     margin: auto;
     text-align: center; /* Ensure the text within is centered horizontally */
}


/* Add your media query here */
@media (min-width: 800px) {
     nav{
          padding: 30px 0; 
          text-align: right;
        }
/* The .container class uses grid with
-Five columns: 50px, auto, 500px, auto, and  50px

The .about, .clients, .method-image, .contact-image:
-Begin in the third column and span two columns


The .method, .contact, .about-image, and .clients-image:
-Begin in the second column and span two columns.


The .text-block class:
-Has  maximum height of  250px
-Ensures that  any content that goes outside their grid cell is still reachable.  */
     .container {
     display: grid;
     grid-template-columns: 50px auto 500px auto 50px;
   }
     .about, .clients, .method-image, .contact-image{
     grid-column: 3 / span 2;
}
     .method, .contact, .about-image, .clients-image{
     grid-column: 2 / span 2;
}
     .text-block {
     max-height: 250px;
     overflow: auto;
}
 }

  /* Step 9: Write the selector/rule property to style the nav element */

 
  /* Step 10: Write the selector/rule property to update the .container class */


  /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/



 /* Step 13:Write the selector/rule property to update the .text-block class */

